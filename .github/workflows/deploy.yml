name: Deploy Parent Portal

on:
  push:
    branches: [main, staging]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build application
        run: npm run build

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 42.96.40.246
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Navigate to project directory
            cd /srv/app/frappe-pp

            # Pull latest code from main branch
            git checkout main
            git pull origin main

            # Install dependencies (if package.json changed)
            npm ci

            # Build application
            npm run build

            # Restart nginx (if needed)
            sudo systemctl reload nginx

            echo "‚úÖ Production deployment completed successfully!"

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 42.96.42.197
          username: ${{ secrets.SSH_USERNAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          port: 22
          script: |
            # Navigate to project directory
            cd /srv/app/frappe-pp

            # Pull latest code from staging branch
            git checkout staging
            git pull origin staging

            # Install dependencies (if package.json changed)
            npm install --legacy-peer-deps

            # Build application
            npm run build

            # Restart nginx (if needed)
            sudo systemctl reload nginx

            echo "‚úÖ Staging deployment completed successfully!"

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              echo "üéâ Production deployment successful!"
              echo "üåê Available at: https://parentportal.wellspring.edu.vn"
            else
              echo "üéâ Staging deployment successful!"
              echo "üåê Available at: https://staging.parentportal.wellspring.edu.vn"
            fi
          else
            echo "‚ùå Deployment failed!"
          fi
